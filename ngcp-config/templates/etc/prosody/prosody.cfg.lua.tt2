[% PROCESS '/usr/lib/ngcp-ngcpcfg/get_hostname'; hostname = out -%]
[% argv.host=hostname; argv.role='lb';
   PROCESS '/usr/lib/ngcp-ngcpcfg/has_role';
   is_lb = out
-%]

[% argv.host=hostname; argv.type='sip_ext';
   PROCESS '/usr/lib/ngcp-ngcpcfg/get_all_ips_for_host';
   sip_ext_ips = out
-%]

admins = { }

modules_enabled = {

	-- Generally required
		"roster"; -- Allow users to have a roster. Recommended ;)
		"saslauth"; -- Authentication for clients and servers. Recommended if you want to log in.
		"tls"; -- Add support for secure TLS on c2s/s2s connections
		"dialback"; -- s2s dialback support
		"disco"; -- Service discovery

	-- Not essential, but recommended
		"private"; -- Private XML storage (for room bookmarks, etc.)
		--"vcard"; -- Allow users to set vCards

	-- These are commented by default as they have a performance impact
		--"privacy"; -- Support privacy lists
		--"compression"; -- Stream compression

	-- Nice to have
		--"version"; -- Replies to server version requests
		--"uptime"; -- Report how long server has been running
		"time"; -- Let others know the time here on this server
		"ping"; -- Replies to XMPP pings with pongs
		"pep"; -- Enables users to publish their mood, activity, playing music and more
		--"register"; -- Allow users to register on this server using a client and change passwords
		-- typically used by an IM client to retrieve the most recent presence information from an offline contact
		--"lastactivity"; -- XEP-0012: Last Activity

	-- Admin interfaces
		--"admin_adhoc"; -- Allows administration via an XMPP client that supports ad-hoc commands
		--"admin_telnet"; -- Opens telnet console interface on localhost port 5582

	-- HTTP modules
		--"bosh"; -- Enable BOSH clients, aka "Jabber over HTTP"
		--"http_files"; -- Serve static files from a directory over HTTP
		"websocket"; -- Enables XMPP over websocket

	-- Other specific functionality
		"posix"; -- POSIX functionality, sends server to background, enables syslog, etc.
		--"groups"; -- Shared roster support
		--"announce"; -- Send announcement to all online users
		--"welcome"; -- Welcome users who register accounts
		--"watchregistrations"; -- Alert admins of registrations
		--"motd"; -- Send a message to users when they log in
		--"legacyauth"; -- Legacy authentication. Only used by some old clients and bots.
		"carbons"; -- Message Carbons (XEP-0280)
		"carbons_copies"; -- a client capable of Message Carbons will not get a v0 copy
		"carbons_adhoc";

	-- Sipwise modules
		"sipwise_admin_telnet"; -- Opens telnet console interface on console_interface:console_port
		"sipwise_vcard_cusax";
		"sipwise_vhosts_sql";
		"sipwise_vjud";
		"sipwise_groups";
		"sipwise_lastactivity"; -- XEP-0012: Last Activity MT#11583
};

-- extension can be enabled for all users by default by setting
carbons_copies_default = true;

use_libevent = true;
daemonize = true
pidfile = "/var/run/prosody/prosody.pid"

modules_disabled = {
	-- "offline"; -- Store offline messages
	-- "c2s"; -- Handle client connections
	-- "s2s"; -- Handle server-to-server connections
};

allow_registration = false;

ssl = {
	key = "[% kamailio.lb.tls.sslcertkeyfile %]";
	certificate = "[% kamailio.lb.tls.sslcertfile %]";
}

c2s_require_encryption = true
s2s_secure = true

cross_domain_websocket = true;
consider_websocket_secure = true;

-- interfaces
[% IF is_lb -%]
[% ips = sip_ext_ips -%]
[% ELSE -%]
[% ips = sip_proxy_ips -%]
[% END -%]
c2s_interfaces = {
[% FOREACH ip IN ips -%]
[% IF ip -%]	"[% ip %]",[% END %]
[% END -%]
}
s2s_interfaces = {
[% FOREACH ip IN ips -%]
[% IF ip -%]	"[% ip %]",[% END %]
[% END -%]
}
[% IF is_lb -%]
[% ips = [ '127.0.0.1' ] -%]
[% END -%]
http_interfaces = {
[% FOREACH ip IN ips -%]
[% IF ip -%]	"[% ip %]",[% END %]
[% END -%]
}
https_interfaces = {
[% FOREACH ip IN ips -%]
[% IF ip -%]	"[% ip %]",[% END %]
[% END -%]
}
-- we authenticate against kamailio.subscriber using mod_auth_sql
authentication = "sql"

default_storage = "sql"
storage = "sql"

-- used by storage modules
sql = {
	driver = "MySQL",
	database = "[% prosody.dbname %]",
	username = "[% prosody.dbuser %]",
	password = "[% prosody.dbpassword %]",
	host = "[% database.central.dbhost %]"
}

-- used by auth_sql and sipwise_vhosts_sql
auth_sql = {
	driver = "MySQL",
	database = "[% kamailio.proxy.dbname %]",
	username = "[% prosody.dbuser %]",
	password = "[% prosody.dbpassword %]",
	host = "[% database.central.dbhost %]"
}
-- used by [sipwise_]admin_telnet
console_port = 5582
console_interface = "[% sip_proxy_ips.0  ? sip_proxy_ips.0 : "127.0.0.1" -%]"


log = {
	{ levels = { min =  "[% prosody.log_level %]" }, to = "syslog" };
}

VirtualHost "localhost"

------ Components ------
-- You can specify components to add hosts that provide special services,
-- like multi-user conferences, and transports.
-- For more information on components, see http://prosody.im/doc/components

---Set up a MUC (multi-user chat) room server on conference.example.com:
--Component "conference.example.com" "muc"

-- Set up a SOCKS5 bytestream proxy for server-proxied file transfers:
--Component "proxy.example.com" "proxy65"

---Set up an external component (default component port is 5347)
--
-- External components allow adding various services, such as gateways/
-- transports to other networks like ICQ, MSN and Yahoo. For more info
-- see: http://prosody.im/doc/components#adding_an_external_component
--
--Component "gateway.example.com"
--	component_secret = "password"
